var DigitalInput = require('./base/digitalSensor');

const buttonMode = {
    UP: 0,
    DOWN: 1
}

var mode = buttonMode.UP; // not pressed

//var pressedDateTime = new Date();

// digital button, can throw singlepress and longpress events
function DigitalButton(pin, longPressDelay) {
    DigitalInput.apply(this, Array.prototype.slice.call(arguments));
    this.longPressDelay = longPressDelay || 1100;
    this.on('change', function (res) {

      // script is in 'un-pressed' state
      if (mode === buttonMode.UP) {
        // user presses the button for the first time
        if (res == 1) {
          var pressedDateTime = new Date();
          mode = buttonMode.DOWN;
        }
      }

      // script is in 'pressed' state
      else if (mode === buttonMode.DOWN) {
        // user is holding the button
        if (res == 1) {
          // do nothing
        }

        // user releases the button
        else if (res == 0) {
          var currentDateTime = new Date();
          var milliseconds = (currentDateTime.getTime() - pressedDateTime.getTime());
          // if button was held down for less than longPressDelay, in milliseconds
          if (milliseconds <= this.longPressDelay) {
            this.emit('down', 'singlepress');
          } else {
            this.emit('down', 'longpress');
          }
          // script resets to 'un-pressed' state
          mode = buttonMode.UP;
        }
      }






//
// //	var currentDateTime;
// //	var milliseconds;
//         //user presses the button for the first time
//         if (res == 1 && mode === buttonMode.UP) {
//             var pressedDateTime = new Date();
//             mode = buttonMode.DOWN;
//             //return;
//             break;
//         }
//
// /*
// 	else if (pressedDateTime == null) {
// 	    pressedDateTime = new Date();
// 	    mode = buttonMode.DOWN;
// 	    return;
// 	}
// */
//
//         //user continues to press the button
//         else if (res == 1 && mode === buttonMode.DOWN) {
//             //do nothing
//             //return;
//             break;
//         }
//
//         //res == 0 so user has lifted her finger
//         else if (res == 0 && mode === buttonMode.DOWN) {
//             var currentDateTime = new Date();
//             var milliseconds = (currentDateTime.getTime() - pressedDateTime.getTime());
//             //if less than longPressDelay milliseconds
//             if (milliseconds <= this.longPressDelay) {
//                 this.emit('down', 'singlepress');
//             } else {
//                 this.emit('down', 'longpress');
//             }
//             //reset the mode
//             mode = buttonMode.UP;
//             //return;
//             break;
//         }
    });
}

DigitalButton.prototype = new DigitalInput();

module.exports = DigitalButton;
